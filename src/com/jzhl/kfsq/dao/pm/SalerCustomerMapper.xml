<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.jzhl.kfsq.dao.pm.ISalerCustomerMapper">

	<resultMap type="com.jzhl.kfsq.entity.pm.SalerCustomer" id="baseResultMap">
		<id property="salerCustomerId" column="salerCustomerId" />
		<result property="userId" column="userId" />
		<result property="memberId" column="memberId" />
		<result property="buildingId" column="buildingId" />
		<result property="isFavorite" column="isFavorite" />
		<result property="createTime" column="createTime" />
		<result property="isValid" column="isValid" />
		<result property="updateTime" column="updateTime" />
	</resultMap>
	
	<sql id="baseColumns">
		salerCustomerId, 
		userId, 
		memberId,
		buildingId,
		isFavorite,
		createTime,
		isValid,
		updateTime
	</sql>

	<insert id ="insertSalerCustomer" parameterType="com.jzhl.kfsq.entity.pm.SalerCustomer">
		<selectKey resultType="Integer" keyProperty="salerCustomerId" order="AFTER">
	    	select @@IDENTITY as salerCustomerId
	    </selectKey>
		insert into PM_SalerCustomer
		(
			userId,
			memberId,
			buildingId,
			createTime,
			isValid
		)
		values
		(
			#{userId},
			#{memberId},
			#{buildingId},
			now(),
			1
		)
	</insert>
	
	<select id ="getCustomerLastTime" parameterType="com.jzhl.kfsq.entity.pm.SalerCustomer" resultMap="baseResultMap" >
		select
		<include refid="baseColumns" />
		from PM_SalerCustomer
		where 
		userId=#{userId}
		and
		memberId=#{memberId}
		and
		isValid = 1
		and 
		createTime = (
			select 
			max(createTime) 
			from
			PM_SalerCustomer
			where 
			userId=#{userId}
			and
			memberId=#{memberId}
			and
			isValid = 1
		)
	</select>
	
	<update id="updateSalerCustomer" parameterType="com.jzhl.kfsq.entity.pm.SalerCustomer">
		update PM_SalerCustomer
		set updateTime = now()
		where salerCustomerId=#{salerCustomerId}
		and isValid = 1
	</update>
	
	<update id="updateFavorite" parameterType="com.jzhl.kfsq.dto.pm.FavoriteDBDto">
		update 
		PM_SalerCustomer
		set 
		isFavorite = #{isFavorite}
		where salerCustomerId = #{salerCustomerId}
		and userId = #{userId}
		and isValid = 1
	</update>
	
	<!-- 根据主键查询客户信息 -->
	<select id ="getSalerCustomer" parameterType="Int" resultMap="baseResultMap" >
		select
		<include refid="baseColumns" />
		from PM_SalerCustomer
		where 
		salerCustomerId = #{salerCustomerId}
	</select>
	
	<!-- 根据用户编号查询客户信息 -->
	<select id ="findSalerCustomerByUserId" parameterType="map" resultMap="baseResultMap" >
		select
		<include refid="baseColumns" />
		from PM_SalerCustomer
		where 
		userId = #{userId}
		and
		isValid = 1
		<if test="isFavorite != null">
			and isFavorite = #{isFavorite}
		</if>
		order by updateTime desc
		limit #{rowStart}, #{offset}
	</select>
	
	<!-- 统计用户编号查询客户信息的数据量 -->
	<select id ="countSalerCustomerByUserId" parameterType="map" resultType="Integer" >
		select
		count(salerCustomerId)
		from PM_SalerCustomer
		where 
		userId = #{userId}
		and
		isValid = 1
		<if test="isFavorite != null">
			and isFavorite = #{isFavorite}
		</if>
	</select>
	
	<!-- 根据会员编号和楼盘编号查询到访记录 -->
	<select id ="findSalerCustomerByMemberIdAndBuildingId" parameterType="map" resultMap="baseResultMap" >
		select
		<include refid="baseColumns" />
		from PM_SalerCustomer
		where 
		memberId = #{memberId}
		and
		buildingId = #{buildingId}
		and
		isValid = 1
	</select>
	
</mapper>